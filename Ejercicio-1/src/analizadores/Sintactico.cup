/*
 * Ejemplo desarrollado por Erick Navarro
 * Blog: e-navarro.blogspot.com
 * Julio - 2018
 */

package analizadores; 
import java_cup.runtime.*;
import java.util.ArrayList;

parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/
     
    public static ArrayList<String>  ArrayPalabras = new ArrayList<String>(); 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  

       public void imprimir(){
        
        for(int i = 0; i<ArrayPalabras.size()-1;i++){

            System.out.println(ArrayPalabras.get(i+1));
        }
        
        System.out.println(ArrayPalabras.get(0));

    }

:} 

terminal String PTCOMA,PARIZQ,PARDER,CORIZQ,CORDER;
terminal String MAS,MENOS,POR,DIVIDIDO;
terminal String ENTERO;
terminal String DECIMAL;
terminal String UMENOS;
terminal String REVALUAR;
terminal String comma;
terminal String PALABRA;

non terminal ini;
non terminal instrucciones;
non terminal instruccion;
non terminal Double expresion;
non terminal PALABRAS;



precedence left MAS,MENOS;
precedence left POR,DIVIDIDO;
precedence right UMENOS; 

start with ini; 

ini::=instrucciones;

instrucciones ::= 
   instruccion instrucciones
 | instruccion
 | error instrucciones
 | PALABRAS {:imprimir();:}
; 

instruccion ::= 
   REVALUAR CORIZQ expresion:a CORDER PTCOMA{:System.out.println("El valor de la expresión es: "+a);:}
;

PALABRAS ::= 
    PALABRAS comma PALABRA:a {:ArrayPalabras.add(a); :}
    | PALABRA:a {: ArrayPalabras.add(a);  :}
;

expresion  ::= 
    MENOS expresion:a                      {:RESULT=a*-1;:}%prec UMENOS     
 |  expresion:a MAS        expresion:b     {:RESULT=a+b;:}
 |  expresion:a MENOS      expresion:b     {:RESULT=a-b;:}
 |  expresion:a POR        expresion:b     {:RESULT=a*b;:}
 |  expresion:a DIVIDIDO   expresion:b     {:RESULT=a/b;:}
 |  ENTERO:a                               {:RESULT=new Double(a);:}
 |  DECIMAL:a                              {:RESULT=new Double(a);:}
 |  PARIZQ expresion:a PARDER              {:RESULT=a;:}
;